const express = require('express');
const axios = require('axios');
const app = express();
const PORT = process.env.PORT || 3000;

const indicadores = {
  demanda: 1001,
  eolica: 600,
  solar_fv: 10195,
  hidraulica: 612,
  nuclear: 613,
  carbon: 614,
  ciclo_combinado: 617,
  otros: 618
};

const HEADERS = {
  'Accept': 'application/json',
  'x-api-key': 'TU_API_KEY',
  'Authorization': `Bearer TU_API_KEY`
};

app.get('/datos-ree', async (req, res) => {
  try {
    const datos = {};
    await Promise.all(Object.entries(indicadores).map(async ([key, id]) => {
      const response = await axios.get(`https://api.esios.ree.es/indicators/${id}`, { headers: HEADERS });
      datos[key] = response.data.indicator.values[0]?.value || 0;
    }));const express = require('express');
const axios = require('axios');
const cors = require('cors');

const app = express();
const PORT = process.env.PORT || 3000;

app.use(cors());

const indicadores = {
  demanda: 1001,
  eolica: 600,
  solar_fv: 10195,
  hidraulica: 612,
  nuclear: 613,
  carbon: 614,
  ciclo_combinado: 617,
  otros: 618
};

const HEADERS = {
  'Accept': 'application/json',
  'x-api-key': process.env.REE_API_KEY,
  'Authorization': `Bearer ${process.env.REE_API_KEY}`
};

app.get('/datos-ree', async (req, res) => {
  try {
    const datos = {};

    await Promise.all(Object.entries(indicadores).map(async ([key, id]) => {
      const url = `https://api.esios.ree.es/indicators/${id}`;
      const respuesta = await axios.get(url, { headers: HEADERS });
      const valor = respuesta.data?.indicator?.values?.[0]?.value || 0;
      datos[key] = valor;
    }));

    res.json(datos);
  } catch (error) {
    console.error('❌ Error al obtener datos REE:', error.message);
    res.status(500).json({ error: 'Error al obtener datos REE' });
  }
});

app.get('/', (req, res) => {
  res.send('🌐 API Proxy para datos de energía REE funcionando correctamente.');
});

app.listen(PORT, () => {
  console.log(`🚀 Servidor backend corriendo en puerto ${PORT}`);
});

    res.json(datos);
  } catch (error) {
    console.error(error);
    res.status(500).send("Error obteniendo datos REE");
  }
});

app.listen(PORT, () => console.log(`Servidor en puerto ${PORT}`));
